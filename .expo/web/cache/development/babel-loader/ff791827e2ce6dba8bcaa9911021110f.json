{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { React, useState } from 'react';\nimport { Colors } from \"../../../componentes/generel/contants\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport style from \"./style\";\nimport { login } from \"../../../services/Auth\";\nimport jwtDecode from \"jwt-decode\";\nimport { useDispatch } from 'react-redux';\nimport { loginAction, setRoleAction, setIdAction, setEmail, setUsername } from \"../../../store/actions/authActions\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submitted = _useState4[0],\n      setSubmitted = _useState4[1];\n\n  var dispatch = useDispatch();\n  var Role = useSelector(function (state) {\n    return state.email;\n  });\n  console.log(Role);\n\n  var handelSubmit = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            login(user.email, user.password).then(function (response) {\n              (function _callee() {\n                var Token;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(dispatch(loginAction(jwtDecode(response.data.accessToken))));\n\n                      case 2:\n                        _context.next = 4;\n                        return _regeneratorRuntime.awrap(dispatch(setRoleAction(jwtDecode(response.data.accessToken).role)));\n\n                      case 4:\n                        _context.next = 6;\n                        return _regeneratorRuntime.awrap(dispatch(setIdAction(jwtDecode(response.data.accessToken).id)));\n\n                      case 6:\n                        _context.next = 8;\n                        return _regeneratorRuntime.awrap(dispatch(setEmail(jwtDecode(response.data.accessToken).email)));\n\n                      case 8:\n                        _context.next = 10;\n                        return _regeneratorRuntime.awrap(dispatch(setUsername(jwtDecode(response.data.accessToken).username)));\n\n                      case 10:\n                        _context.next = 12;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', response.data.accessToken));\n\n                      case 12:\n                        Token = _context.sent;\n                        _context.next = 15;\n                        return _regeneratorRuntime.awrap(navigation.navigate('Profile'));\n\n                      case 15:\n                        console.log(jwtDecode(response.data.accessToken).email);\n\n                      case 16:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              })();\n\n              setSubmitted(true);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsxs(View, {\n      style: style.header,\n      children: [_jsx(ImageBackground, {\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          position: 'absolute'\n        },\n        source: require(\"../../\")\n      }), _jsx(Text, {\n        style: [style.text_header, {\n          marginBottom: 80\n        }],\n        children: \"Welcome!\"\n      })]\n    }), _jsxs(View, {\n      style: style.footer,\n      children: [_jsx(Text, {\n        style: style.text_footer,\n        children: \"Email\"\n      }), _jsxs(View, {\n        style: style.action,\n        children: [_jsx(FontAwesome, {\n          name: \"envelope\",\n          size: 20\n        }), _jsx(TextInput, {\n          placeholder: \"Your Email\",\n          onChangeText: function onChangeText(email) {\n            return setUser(_objectSpread(_objectSpread({}, user), {}, {\n              email: email\n            }));\n          },\n          placeholderTextColor: \"#666666\",\n          style: [style.textInput, {\n            color: Colors.text\n          }]\n        })]\n      }), _jsx(Text, {\n        style: [style.text_footer, {\n          marginTop: 30\n        }],\n        children: \"Password\"\n      }), _jsxs(View, {\n        style: style.action,\n        children: [_jsx(FontAwesome, {\n          name: \"lock\",\n          size: 20\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          placeholderTextColor: \"#666666\",\n          onChangeText: function onChangeText(password) {\n            return setUser(_objectSpread(_objectSpread({}, user), {}, {\n              password: password\n            }));\n          },\n          style: [style.textInput, {\n            color: Colors.text\n          }]\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: style.button,\n        onPress: handelSubmit,\n        children: _jsx(LinearGradient, {\n          colors: ['#E2BB73', '#AC9261'],\n          style: style.signIn,\n          children: _jsx(Text, {\n            style: [style.textSign, {\n              color: '#fff'\n            }],\n            children: \"Sign In\"\n          })\n        })\n      })]\n    })]\n  });\n}\n;","map":{"version":3,"names":["React","useState","Colors","FontAwesome","LinearGradient","style","login","jwtDecode","useDispatch","loginAction","setRoleAction","setIdAction","setEmail","setUsername","AsyncStorage","useSelector","Login","navigation","email","password","user","setUser","submitted","setSubmitted","dispatch","Role","state","console","log","handelSubmit","then","response","data","accessToken","role","id","username","setItem","Token","navigate","container","header","height","width","position","require","text_header","marginBottom","footer","text_footer","action","textInput","color","text","marginTop","button","signIn","textSign"],"sources":["C:/Users/Youcode/Desktop/fillkh/src/screen/Auth/login/login.js"],"sourcesContent":["import { View, Text ,StyleSheet,TextInput,ImageBackground,TouchableOpacity} from 'react-native';\nimport {React,useState} from 'react';\nimport { Colors } from '../../../componentes/generel/contants';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport style from \"./style\";\nimport {login} from \"../../../services/Auth\";\nimport jwtDecode from \"jwt-decode\";\nimport { useDispatch } from 'react-redux';\nimport {loginAction,setRoleAction,setIdAction,setEmail,setUsername} from \"../../../store/actions/authActions\";\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { useSelector } from 'react-redux';\n// import {PrimaryButton } from \"../../../componentes/generel/button/button\";\n\nexport default function Login ({navigation})  {\n    const [user, setUser] = useState({\n        email: \"\",\n        password:\"\",\n    });\n\n    const [submitted, setSubmitted] = useState(false);\n    const dispatch= useDispatch();\n    const Role= useSelector((state)=>state.email);\n    console.log(Role);\n\n    const handelSubmit = async()=>{\n        login(user.email,user.password).then((response)=>{\n            (async () => {\n                await dispatch(loginAction(jwtDecode(response.data.accessToken)));\n                await dispatch(setRoleAction(jwtDecode(response.data.accessToken).role));\n                await dispatch(setIdAction(jwtDecode(response.data.accessToken).id));\n                await dispatch(setEmail(jwtDecode(response.data.accessToken).email));\n                await dispatch(setUsername(jwtDecode(response.data.accessToken).username));\n                \n                const Token = await AsyncStorage.setItem('token', response.data.accessToken);\n                await navigation.navigate('Profile')\n                console.log(jwtDecode(response.data.accessToken).email);\n                \n            })()\n            setSubmitted(true);\n        })\n        }\n\n\n    return (\n    <View style={style.container}>\n        <View style={style.header}>\n            <ImageBackground style={{height: \"100%\",width:\"100%\" , position: 'absolute'}}  source={require('../../')}/>\n                <Text  style={[style.text_header,{marginBottom: 80}]}>Welcome!</Text>\n            </View>\n                <View style={style.footer}>\n                <Text style={style.text_footer }>Email</Text>\n                  <View style={style.action}>\n                  <FontAwesome name=\"envelope\"  size={20} />\n                        <TextInput \n                            placeholder=\"Your Email\"\n                            onChangeText={email => setUser({...user, email: email})}\n                            placeholderTextColor=\"#666666\"\n                            style={[style.textInput, {\n                                color:Colors.text\n                            }]}\n                            />\n                </View>\n                <Text style={[style.text_footer,{marginTop: 30}]}>Password</Text>\n                  <View style={style.action}>\n                  <FontAwesome name=\"lock\" size={20} />\n                        <TextInput \n                            placeholder=\"Password\"\n                            placeholderTextColor=\"#666666\"\n                            onChangeText={password => setUser({...user, password: password})}\n                            style={[style.textInput, {\n                                color:Colors.text\n                            }]}\n                            />\n                </View>\n                <TouchableOpacity\n                    style={style.button}\n                    onPress={handelSubmit}\n                    >\n                <LinearGradient\n                    colors={['#E2BB73' ,'#AC9261']}\n                    style={style.signIn}\n                >\n                    <Text style={[style.textSign, {\n                        color:'#fff'\n                    }]}>Sign In</Text>\n                </LinearGradient>\n              </TouchableOpacity>\n                </View>\n      </View>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}